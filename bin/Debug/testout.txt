(uses, uses)
(indentifier, crt)
(;, ;)
(var, var)
(indentifier, num)
(,, ,)
(indentifier, a)
(:, :)
(array, array)
([, [)
(inter, 1)
(.., ..)
(inter, 20)
(,, ,)
(inter, 1)
(.., ..)
(inter, 20)
(], ])
(of, of)
(indentifier, integer)
(;, ;)
(-1, -)
(inter, 1)
(;, ;)
(inter, 12)
(-, -)
(inter, 3)
(;, ;)
(+1, +)
(inter, 1)
(;, ;)
(indentifier, asdf)
(+, +)
(inter, 23)
(;, ;)
(real, 1.20e-20)
(real, 1.3)
(real, 1.3e+2e34e-23)
(indentifier, i)
(,, ,)
(indentifier, j)
(,, ,)
(indentifier, next)
(,, ,)
(indentifier, dif)
(:, :)
(indentifier, integer)
(;, ;)
(indentifier, key)
(:, :)
(indentifier, char)
(;, ;)
(indentifier, fail)
(,, ,)
(indentifier, win)
(:, :)
(indentifier, boolean)
(;, ;)
(indentifier, fo)
(:, :)
(indentifier, text)
(;, ;)
(indentifier, re)
(:, :)
(indentifier, char)
(;, ;)
(procedure, procedure)
(indentifier, show)
((, ()
(indentifier, i)
(:, :)
(indentifier, integer)
(), ))
(;, ;)
(indentifier, begin)
(indentifier, clrscr)
(;, ;)
(indentifier, writeln)
(;, ;)
(indentifier, writeln)
(;, ;)
(indentifier, writeln)
(;, ;)
(indentifier, writeln)
(;, ;)
(indentifier, writeln)
(;, ;)
(indentifier, writeln)
(;, ;)
(indentifier, writeln)
(;, ;)
(indentifier, writeln)
(;, ;)
(if, if)
(indentifier, i)
(=, =)
(inter, 1)
(then, then)
(indentifier, writeln)
((, ()
(string, '                       **         EASY           **')
(), ))
(else, else)
(indentifier, writeln)
((, ()
(string, '                                  EASY')
(), ))
(;, ;)
(if, if)
(indentifier, i)
(=, =)
(inter, 2)
(then, then)
(indentifier, writeln)
((, ()
(string, '                       **         ORDINARILY     **')
(), ))
(else, else)
(indentifier, writeln)
((, ()
(string, '                                  ORDINARILY')
(), ))
(;, ;)
(if, if)
(indentifier, i)
(=, =)
(inter, 3)
(then, then)
(indentifier, writeln)
((, ()
(string, '                       **         HARD           **')
(), ))
(else, else)
(indentifier, writeln)
((, ()
(string, '                                  HARD')
(), ))
(;, ;)
(end, end)
(;, ;)
(procedure, procedure)
(indentifier, choose)
(;, ;)
(var, var)
(indentifier, v)
(:, :)
(indentifier, integer)
(;, ;)
(indentifier, s)
(:, :)
(indentifier, char)
(;, ;)
(indentifier, begin)
(indentifier, v)
(:=, :=)
(inter, 1)
(;, ;)
(indentifier, show)
((, ()
(inter, 1)
(), ))
(;, ;)
(while, while)
(indentifier, ord)
((, ()
(indentifier, s)
(), ))
(<>, <>)
(>, >)
(,, ,)
(inter, 13)
(indentifier, do)
(indentifier, begin)
(indentifier, s)
(:=, :=)
(indentifier, readkey)
(;, ;)
(if, if)
(indentifier, ord)
((, ()
(indentifier, s)
(), ))
(=, =)
(inter, 80)
(then, then)
(indentifier, begin)
(if, if)
(indentifier, v)
(=, =)
(inter, 3)
(then, then)
(indentifier, v)
(:=, :=)
(inter, 1)
(else, else)
(indentifier, v)
(:=, :=)
(indentifier, v)
(+, +)
(inter, 1)
(;, ;)
(indentifier, show)
((, ()
(indentifier, v)
(), ))
(;, ;)
(end, end)
(else, else)
(if, if)
(indentifier, ord)
((, ()
(indentifier, s)
(), ))
(=, =)
(inter, 72)
(then, then)
(indentifier, begin)
(if, if)
(indentifier, v)
(=, =)
(inter, 1)
(then, then)
(indentifier, v)
(:=, :=)
(inter, 3)
(else, else)
(indentifier, v)
(:=, :=)
(indentifier, v)
(-, -)
(inter, 1)
(;, ;)
(indentifier, show)
((, ()
(indentifier, v)
(), ))
(end, end)
(else, else)
(indentifier, begin)
(indentifier, show)
((, ()
(indentifier, v)
(), ))
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(indentifier, dif)
(:=, :=)
(indentifier, v)
(;, ;)
(end, end)
(;, ;)
(procedure, procedure)
(indentifier, winner)
(;, ;)
(indentifier, begin)
(if, if)
(indentifier, next)
(=, =)
(inter, 0)
(then, then)
(indentifier, win)
(:=, :=)
(indentifier, true)
(else, else)
(indentifier, win)
(:=, :=)
(indentifier, false)
(;, ;)
(end, end)
(;, ;)
(procedure, procedure)
(indentifier, count)
((, ()
(indentifier, ii)
(,, ,)
(indentifier, jj)
(:, :)
(indentifier, integer)
(), ))
(;, ;)
(var, var)
(indentifier, k)
(,, ,)
(indentifier, m)
(,, ,)
(indentifier, n)
(:, :)
(indentifier, integer)
(;, ;)
(indentifier, begin)
(if, if)
((, ()
(indentifier, ii)
(=, =)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, jj)
(=, =)
(inter, 1)
(), ))
(then, then)
(indentifier, begin)
(indentifier, k)
(:=, :=)
(inter, 0)
(;, ;)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, ii)
(to, to)
(indentifier, ii)
(+, +)
(inter, 1)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, jj)
(to, to)
(indentifier, jj)
(+, +)
(inter, 1)
(indentifier, do)
(if, if)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 0)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 3)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 10)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 13)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 100)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 103)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 110)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 113)
(), ))
(<=, <=)
(,, ,)
(inter, 1)
(then, then)
(indentifier, k)
(:=, :=)
(indentifier, k)
(+, +)
(inter, 1)
(;, ;)
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(:=, :=)
(indentifier, k)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, ii)
(=, =)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, jj)
(>, >)
(,, ,)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, jj)
(<, <)
(>, >)
(,, ,)
(inter, 20)
(), ))
(then, then)
(indentifier, begin)
(indentifier, k)
(:=, :=)
(inter, 0)
(;, ;)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, ii)
(to, to)
(indentifier, ii)
(+, +)
(inter, 1)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, jj)
(-, -)
(inter, 1)
(to, to)
(indentifier, jj)
(+, +)
(inter, 1)
(indentifier, do)
(if, if)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 0)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 3)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 10)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 13)
(), ))
(<=, <=)
(,, ,)
(inter, 1)
(then, then)
(indentifier, k)
(:=, :=)
(indentifier, k)
(+, +)
(inter, 1)
(;, ;)
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(:=, :=)
(indentifier, k)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, ii)
(=, =)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, jj)
(=, =)
(inter, 20)
(), ))
(then, then)
(indentifier, begin)
(indentifier, k)
(:=, :=)
(inter, 0)
(;, ;)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, ii)
(to, to)
(indentifier, ii)
(+, +)
(inter, 1)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, jj)
(-, -)
(inter, 1)
(to, to)
(indentifier, jj)
(indentifier, do)
(if, if)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 0)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 3)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 10)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 13)
(), ))
(<=, <=)
(,, ,)
(inter, 1)
(then, then)
(indentifier, k)
(:=, :=)
(indentifier, k)
(+, +)
(inter, 1)
(;, ;)
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(:=, :=)
(indentifier, k)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, ii)
(>, >)
(,, ,)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, ii)
(<, <)
(>, >)
(,, ,)
(inter, 20)
(), ))
(and, and)
((, ()
(indentifier, jj)
(=, =)
(inter, 1)
(), ))
(then, then)
(indentifier, begin)
(indentifier, k)
(:=, :=)
(inter, 0)
(;, ;)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, ii)
(-, -)
(inter, 1)
(to, to)
(indentifier, ii)
(+, +)
(inter, 1)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, jj)
(to, to)
(indentifier, jj)
(+, +)
(inter, 1)
(indentifier, do)
(if, if)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 0)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 3)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 10)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 13)
(), ))
(<=, <=)
(,, ,)
(inter, 1)
(then, then)
(indentifier, k)
(:=, :=)
(indentifier, k)
(+, +)
(inter, 1)
(;, ;)
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(:=, :=)
(indentifier, k)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, ii)
(>, >)
(,, ,)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, ii)
(<, <)
(>, >)
(,, ,)
(inter, 20)
(), ))
(and, and)
((, ()
(indentifier, jj)
(>, >)
(,, ,)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, jj)
(<, <)
(>, >)
(,, ,)
(inter, 20)
(), ))
(then, then)
(indentifier, begin)
(indentifier, k)
(:=, :=)
(inter, 0)
(;, ;)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, ii)
(-, -)
(inter, 1)
(to, to)
(indentifier, ii)
(+, +)
(inter, 1)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, jj)
(-, -)
(inter, 1)
(to, to)
(indentifier, jj)
(+, +)
(inter, 1)
(indentifier, do)
(if, if)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 0)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 3)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 10)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 13)
(), ))
(<=, <=)
(,, ,)
(inter, 1)
(then, then)
(indentifier, k)
(:=, :=)
(indentifier, k)
(+, +)
(inter, 1)
(;, ;)
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(:=, :=)
(indentifier, k)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, ii)
(>, >)
(,, ,)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, ii)
(<, <)
(>, >)
(,, ,)
(inter, 20)
(), ))
(and, and)
((, ()
(indentifier, jj)
(=, =)
(inter, 20)
(), ))
(then, then)
(indentifier, begin)
(indentifier, k)
(:=, :=)
(inter, 0)
(;, ;)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, ii)
(-, -)
(inter, 1)
(to, to)
(indentifier, ii)
(+, +)
(inter, 1)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, jj)
(-, -)
(inter, 1)
(to, to)
(indentifier, jj)
(indentifier, do)
(if, if)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 0)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 3)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 10)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 13)
(), ))
(<=, <=)
(,, ,)
(inter, 1)
(then, then)
(indentifier, k)
(:=, :=)
(indentifier, k)
(+, +)
(inter, 1)
(;, ;)
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(:=, :=)
(indentifier, k)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, ii)
(=, =)
(inter, 20)
(), ))
(and, and)
((, ()
(indentifier, jj)
(=, =)
(inter, 1)
(), ))
(then, then)
(indentifier, begin)
(indentifier, k)
(:=, :=)
(inter, 0)
(;, ;)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, ii)
(-, -)
(inter, 1)
(to, to)
(indentifier, ii)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, jj)
(to, to)
(indentifier, jj)
(+, +)
(inter, 1)
(indentifier, do)
(if, if)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 0)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 3)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 10)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 13)
(), ))
(<=, <=)
(,, ,)
(inter, 1)
(then, then)
(indentifier, k)
(:=, :=)
(indentifier, k)
(+, +)
(inter, 1)
(;, ;)
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(:=, :=)
(indentifier, k)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, ii)
(=, =)
(inter, 20)
(), ))
(and, and)
((, ()
(indentifier, jj)
(>, >)
(,, ,)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, jj)
(<, <)
(>, >)
(,, ,)
(inter, 20)
(), ))
(then, then)
(indentifier, begin)
(indentifier, k)
(:=, :=)
(inter, 0)
(;, ;)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, ii)
(-, -)
(inter, 1)
(to, to)
(indentifier, ii)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, jj)
(-, -)
(inter, 1)
(to, to)
(indentifier, jj)
(+, +)
(inter, 1)
(indentifier, do)
(if, if)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 0)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 3)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 10)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 13)
(), ))
(<=, <=)
(,, ,)
(inter, 1)
(then, then)
(indentifier, k)
(:=, :=)
(indentifier, k)
(+, +)
(inter, 1)
(;, ;)
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(:=, :=)
(indentifier, k)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, ii)
(=, =)
(inter, 20)
(), ))
(and, and)
((, ()
(indentifier, jj)
(=, =)
(inter, 20)
(), ))
(then, then)
(indentifier, begin)
(indentifier, k)
(:=, :=)
(inter, 0)
(;, ;)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, ii)
(-, -)
(inter, 1)
(to, to)
(indentifier, ii)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, jj)
(-, -)
(inter, 1)
(to, to)
(indentifier, jj)
(indentifier, do)
(if, if)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 0)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 3)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 10)
(), ))
(+1, +)
(indentifier, ord)
((, ()
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(=, =)
(inter, 13)
(), ))
(<=, <=)
(,, ,)
(inter, 1)
(then, then)
(indentifier, k)
(:=, :=)
(indentifier, k)
(+, +)
(inter, 1)
(;, ;)
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(:=, :=)
(indentifier, k)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(procedure, procedure)
(indentifier, make)
(;, ;)
(var, var)
(indentifier, m)
(,, ,)
(indentifier, n)
(,, ,)
(indentifier, zz)
(:, :)
(indentifier, integer)
(;, ;)
(indentifier, begin)
(indentifier, randomize)
(;, ;)
(for, for)
(indentifier, m)
(:=, :=)
(inter, 1)
(to, to)
(inter, 20)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(inter, 1)
(to, to)
(inter, 20)
(indentifier, do)
(indentifier, begin)
(indentifier, zz)
(:=, :=)
(indentifier, random)
((, ()
(inter, 100)
(), ))
(;, ;)
(case, case)
(indentifier, dif)
(of, of)
(inter, 1)
(:, :)
(indentifier, begin)
(if, if)
(indentifier, zz)
(<, <)
(>, >)
(,, ,)
(inter, 8)
(then, then)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(:=, :=)
(inter, 0)
(;, ;)
(indentifier, next)
(:=, :=)
(indentifier, next)
(+, +)
(inter, 1)
(;, ;)
(end, end)
(else, else)
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(:=, :=)
(inter, 1)
(;, ;)
(end, end)
(;, ;)
(inter, 2)
(:, :)
(indentifier, begin)
(if, if)
(indentifier, zz)
(<, <)
(>, >)
(,, ,)
(inter, 16)
(then, then)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(:=, :=)
(inter, 0)
(;, ;)
(indentifier, next)
(:=, :=)
(indentifier, next)
(+, +)
(inter, 1)
(;, ;)
(end, end)
(else, else)
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(:=, :=)
(inter, 1)
(;, ;)
(end, end)
(;, ;)
(inter, 3)
(:, :)
(indentifier, begin)
(if, if)
(indentifier, zz)
(<, <)
(>, >)
(,, ,)
(inter, 21)
(then, then)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(:=, :=)
(inter, 0)
(;, ;)
(indentifier, next)
(:=, :=)
(indentifier, next)
(+, +)
(inter, 1)
(;, ;)
(end, end)
(else, else)
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(:=, :=)
(inter, 1)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(procedure, procedure)
(indentifier, dig)
((, ()
(indentifier, mm)
(,, ,)
(indentifier, nn)
(:, :)
(indentifier, integer)
(), ))
(;, ;)
(var, var)
(indentifier, m1)
(,, ,)
(indentifier, m2)
(,, ,)
(indentifier, n1)
(,, ,)
(indentifier, n2)
(,, ,)
(indentifier, m3)
(,, ,)
(indentifier, n3)
(,, ,)
(indentifier, m)
(,, ,)
(indentifier, n)
(:, :)
(indentifier, integer)
(;, ;)
(indentifier, aa)
(:, :)
(array, array)
([, [)
(inter, 1)
(.., ..)
(inter, 20)
(,, ,)
(inter, 1)
(.., ..)
(inter, 20)
(], ])
(of, of)
(indentifier, boolean)
(;, ;)
(indentifier, begin)
(if, if)
(indentifier, num)
([, [)
(indentifier, mm)
(,, ,)
(indentifier, nn)
(], ])
(=, =)
(inter, 0)
(then, then)
(indentifier, begin)
(if, if)
((, ()
(indentifier, mm)
(=, =)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, nn)
(=, =)
(inter, 1)
(), ))
(then, then)
(indentifier, begin)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, mm)
(to, to)
(indentifier, mm)
(+, +)
(inter, 1)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, nn)
(to, to)
(indentifier, nn)
(+, +)
(inter, 1)
(indentifier, do)
(indentifier, begin)
(indentifier, count)
((, ()
(indentifier, m)
(,, ,)
(indentifier, n)
(), ))
(;, ;)
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(:=, :=)
(inter, 2)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, mm)
(=, =)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, nn)
(>, >)
(,, ,)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, nn)
(<, <)
(>, >)
(,, ,)
(inter, 20)
(), ))
(then, then)
(indentifier, begin)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, mm)
(to, to)
(indentifier, mm)
(+, +)
(inter, 1)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, nn)
(-, -)
(inter, 1)
(to, to)
(indentifier, nn)
(+, +)
(inter, 1)
(indentifier, do)
(indentifier, begin)
(indentifier, count)
((, ()
(indentifier, m)
(,, ,)
(indentifier, n)
(), ))
(;, ;)
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(:=, :=)
(inter, 2)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, mm)
(=, =)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, nn)
(=, =)
(inter, 20)
(), ))
(then, then)
(indentifier, begin)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, mm)
(to, to)
(indentifier, mm)
(+, +)
(inter, 1)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, nn)
(-, -)
(inter, 1)
(to, to)
(indentifier, nn)
(indentifier, do)
(indentifier, begin)
(indentifier, count)
((, ()
(indentifier, m)
(,, ,)
(indentifier, n)
(), ))
(;, ;)
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(:=, :=)
(inter, 2)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, mm)
(>, >)
(,, ,)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, mm)
(<, <)
(>, >)
(,, ,)
(inter, 20)
(), ))
(and, and)
((, ()
(indentifier, nn)
(=, =)
(inter, 1)
(), ))
(then, then)
(indentifier, begin)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, mm)
(-, -)
(inter, 1)
(to, to)
(indentifier, mm)
(+, +)
(inter, 1)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, nn)
(to, to)
(indentifier, nn)
(+, +)
(inter, 1)
(indentifier, do)
(indentifier, begin)
(indentifier, count)
((, ()
(indentifier, m)
(,, ,)
(indentifier, n)
(), ))
(;, ;)
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(:=, :=)
(inter, 2)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, mm)
(>, >)
(,, ,)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, mm)
(<, <)
(>, >)
(,, ,)
(inter, 20)
(), ))
(and, and)
((, ()
(indentifier, nn)
(>, >)
(,, ,)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, nn)
(<, <)
(>, >)
(,, ,)
(inter, 20)
(), ))
(then, then)
(indentifier, begin)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, mm)
(-, -)
(inter, 1)
(to, to)
(indentifier, mm)
(+, +)
(inter, 1)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, nn)
(-, -)
(inter, 1)
(to, to)
(indentifier, nn)
(+, +)
(inter, 1)
(indentifier, do)
(indentifier, begin)
(indentifier, count)
((, ()
(indentifier, m)
(,, ,)
(indentifier, n)
(), ))
(;, ;)
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(:=, :=)
(inter, 2)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, mm)
(>, >)
(,, ,)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, mm)
(<, <)
(>, >)
(,, ,)
(inter, 20)
(), ))
(and, and)
((, ()
(indentifier, nn)
(=, =)
(inter, 20)
(), ))
(then, then)
(indentifier, begin)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, mm)
(-, -)
(inter, 1)
(to, to)
(indentifier, mm)
(+, +)
(inter, 1)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, nn)
(-, -)
(inter, 1)
(to, to)
(indentifier, nn)
(indentifier, do)
(indentifier, begin)
(indentifier, count)
((, ()
(indentifier, m)
(,, ,)
(indentifier, n)
(), ))
(;, ;)
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(:=, :=)
(inter, 2)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, mm)
(=, =)
(inter, 20)
(), ))
(and, and)
((, ()
(indentifier, nn)
(=, =)
(inter, 1)
(), ))
(then, then)
(indentifier, begin)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, mm)
(-, -)
(inter, 1)
(to, to)
(indentifier, mm)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, nn)
(to, to)
(indentifier, nn)
(+, +)
(inter, 1)
(indentifier, do)
(indentifier, begin)
(indentifier, count)
((, ()
(indentifier, m)
(,, ,)
(indentifier, n)
(), ))
(;, ;)
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(:=, :=)
(inter, 2)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, mm)
(=, =)
(inter, 20)
(), ))
(and, and)
((, ()
(indentifier, nn)
(>, >)
(,, ,)
(inter, 1)
(), ))
(and, and)
((, ()
(indentifier, nn)
(<, <)
(>, >)
(,, ,)
(inter, 20)
(), ))
(then, then)
(indentifier, begin)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, mm)
(to, to)
(indentifier, mm)
(+, +)
(inter, 1)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, nn)
(-, -)
(inter, 1)
(to, to)
(indentifier, nn)
(+, +)
(inter, 1)
(indentifier, do)
(indentifier, begin)
(indentifier, count)
((, ()
(indentifier, m)
(,, ,)
(indentifier, n)
(), ))
(;, ;)
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(:=, :=)
(inter, 2)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(if, if)
((, ()
(indentifier, mm)
(=, =)
(inter, 20)
(), ))
(and, and)
((, ()
(indentifier, nn)
(=, =)
(inter, 20)
(), ))
(then, then)
(indentifier, begin)
(for, for)
(indentifier, m)
(:=, :=)
(indentifier, mm)
(-, -)
(inter, 1)
(to, to)
(indentifier, mm)
(indentifier, do)
(for, for)
(indentifier, n)
(:=, :=)
(indentifier, nn)
(-, -)
(inter, 1)
(to, to)
(indentifier, nn)
(indentifier, do)
(indentifier, begin)
(indentifier, count)
((, ()
(indentifier, m)
(,, ,)
(indentifier, n)
(), ))
(;, ;)
(indentifier, a)
([, [)
(indentifier, m)
(,, ,)
(indentifier, n)
(], ])
(:=, :=)
(inter, 2)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(procedure, procedure)
(indentifier, code)
(;, ;)
(var, var)
(indentifier, co)
(:, :)
(string, string)
(;, ;)
(indentifier, mm)
(,, ,)
(indentifier, nn)
(:, :)
(indentifier, integer)
(;, ;)
(indentifier, begin)
(indentifier, writeln)
((, ()
(string, 'Please type in the code')
(), ))
(;, ;)
(indentifier, readln)
((, ()
(indentifier, co)
(), ))
(;, ;)
(if, if)
(indentifier, co)
(=, =)
(string, 'black sheep wall')
(then, then)
(indentifier, begin)
(for, for)
(indentifier, mm)
(:=, :=)
(inter, 1)
(to, to)
(inter, 20)
(indentifier, do)
(for, for)
(indentifier, nn)
(:=, :=)
(inter, 1)
(to, to)
(inter, 20)
(indentifier, do)
(indentifier, a)
([, [)
(indentifier, mm)
(,, ,)
(indentifier, nn)
(], ])
(:=, :=)
(indentifier, a)
([, [)
(indentifier, mm)
(,, ,)
(indentifier, nn)
(], ])
(+1, +)
(inter, 100)
(;, ;)
(end, end)
(else, else)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(procedure, procedure)
(indentifier, print)
(;, ;)
(var, var)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(:, :)
(indentifier, integer)
(;, ;)
(indentifier, begin)
(indentifier, clrscr)
(;, ;)
(indentifier, writeln)
((, ()
(string, 'up_key:up , down_key:down , left_key:left , right_key:right  e:open    r:size    enter:enter  q:exit')
(), ))
(;, ;)
(for, for)
(indentifier, ii)
(:=, :=)
(inter, 1)
(to, to)
(inter, 20)
(indentifier, do)
(indentifier, begin)
(for, for)
(indentifier, jj)
(:=, :=)
(inter, 1)
(to, to)
(inter, 20)
(indentifier, do)
(case, case)
(indentifier, a)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(of, of)
(inter, 0)
(:, :)
(indentifier, write)
((, ()
(string, '*')
(,, ,)
(string, ' ')
(), ))
(;, ;)
(inter, 1)
(:, :)
(indentifier, write)
((, ()
(string, '*')
(,, ,)
(string, ' ')
(), ))
(;, ;)
(inter, 2)
(:, :)
(if, if)
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(=, =)
(inter, 0)
(then, then)
(indentifier, write)
((, ()
(string, '  ')
(), ))
(else, else)
(indentifier, write)
((, ()
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(,, ,)
(string, ' ')
(), ))
(;, ;)
(inter, 3)
(:, :)
(indentifier, write)
((, ()
(indentifier, chr)
((, ()
(inter, 1)
(), ))
(,, ,)
(string, ' ')
(), ))
(;, ;)
(inter, 4)
(:, :)
(indentifier, write)
((, ()
(indentifier, chr)
((, ()
(inter, 2)
(), ))
(,, ,)
(string, ' ')
(), ))
(;, ;)
(inter, 5)
(:, :)
(indentifier, write)
((, ()
(indentifier, chr)
((, ()
(inter, 1)
(), ))
(,, ,)
(string, ' ')
(), ))
(;, ;)
(inter, 10)
(:, :)
(indentifier, write)
((, ()
(string, '*')
(,, ,)
(string, '<')
(), ))
(;, ;)
(inter, 11)
(:, :)
(indentifier, write)
((, ()
(string, '*')
(,, ,)
(string, '<')
(), ))
(;, ;)
(inter, 12)
(:, :)
(if, if)
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(=, =)
(inter, 0)
(then, then)
(indentifier, write)
((, ()
(string, ' <')
(), ))
(else, else)
(indentifier, write)
((, ()
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(,, ,)
(string, '<')
(), ))
(;, ;)
(inter, 13)
(:, :)
(indentifier, write)
((, ()
(indentifier, chr)
((, ()
(inter, 1)
(), ))
(,, ,)
(string, '<')
(), ))
(;, ;)
(inter, 14)
(:, :)
(indentifier, write)
((, ()
(indentifier, chr)
((, ()
(inter, 2)
(), ))
(,, ,)
(string, '<')
(), ))
(;, ;)
(inter, 15)
(:, :)
(indentifier, write)
((, ()
(indentifier, chr)
((, ()
(inter, 1)
(), ))
(,, ,)
(string, '<')
(), ))
(;, ;)
(inter, 100)
(:, :)
(indentifier, write)
((, ()
(indentifier, chr)
((, ()
(inter, 15)
(), ))
(,, ,)
(string, ' ')
(), ))
(;, ;)
(inter, 101)
(:, :)
(indentifier, write)
((, ()
(string, '*')
(,, ,)
(string, ' ')
(), ))
(;, ;)
(inter, 102)
(:, :)
(if, if)
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(=, =)
(inter, 0)
(then, then)
(indentifier, write)
((, ()
(string, '  ')
(), ))
(else, else)
(indentifier, write)
((, ()
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(,, ,)
(string, ' ')
(), ))
(;, ;)
(inter, 103)
(:, :)
(indentifier, write)
((, ()
(indentifier, chr)
((, ()
(inter, 1)
(), ))
(,, ,)
(string, ' ')
(), ))
(;, ;)
(inter, 104)
(:, :)
(indentifier, write)
((, ()
(indentifier, chr)
((, ()
(inter, 2)
(), ))
(,, ,)
(string, ' ')
(), ))
(;, ;)
(inter, 105)
(:, :)
(indentifier, write)
((, ()
(indentifier, chr)
((, ()
(inter, 1)
(), ))
(,, ,)
(string, ' ')
(), ))
(;, ;)
(inter, 110)
(:, :)
(indentifier, write)
((, ()
(indentifier, chr)
((, ()
(inter, 15)
(), ))
(,, ,)
(string, '<')
(), ))
(;, ;)
(inter, 111)
(:, :)
(indentifier, write)
((, ()
(string, '*')
(,, ,)
(string, '<')
(), ))
(;, ;)
(inter, 112)
(:, :)
(if, if)
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(=, =)
(inter, 0)
(then, then)
(indentifier, write)
((, ()
(string, ' <')
(), ))
(else, else)
(indentifier, write)
((, ()
(indentifier, num)
([, [)
(indentifier, ii)
(,, ,)
(indentifier, jj)
(], ])
(,, ,)
(string, '<')
(), ))
(;, ;)
(inter, 113)
(:, :)
(indentifier, write)
((, ()
(indentifier, chr)
((, ()
(inter, 1)
(), ))
(,, ,)
(string, '<')
(), ))
(;, ;)
(inter, 114)
(:, :)
(indentifier, write)
((, ()
(indentifier, chr)
((, ()
(inter, 2)
(), ))
(,, ,)
(string, '<')
(), ))
(;, ;)
(inter, 115)
(:, :)
(indentifier, write)
((, ()
(indentifier, chr)
((, ()
(inter, 1)
(), ))
(,, ,)
(string, '<')
(), ))
(;, ;)
(end, end)
(;, ;)
(indentifier, writeln)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(procedure, procedure)
(indentifier, change)
((, ()
(indentifier, y)
(:, :)
(indentifier, char)
(), ))
(;, ;)
(var, var)
(indentifier, k)
(:, :)
(indentifier, integer)
(;, ;)
(indentifier, begin)
(case, case)
(indentifier, ord)
((, ()
(indentifier, y)
(), ))
(of, of)
(inter, 72)
(:, :)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(-1, -)
(inter, 10)
(;, ;)
(indentifier, i)
(:=, :=)
(indentifier, i)
(-, -)
(inter, 1)
(;, ;)
(if, if)
(indentifier, i)
(<, <)
(>, >)
(,, ,)
(inter, 1)
(then, then)
(indentifier, i)
(:=, :=)
(inter, 20)
(;, ;)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(+1, +)
(inter, 10)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(inter, 75)
(:, :)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(-1, -)
(inter, 10)
(;, ;)
(indentifier, j)
(:=, :=)
(indentifier, j)
(-, -)
(inter, 1)
(;, ;)
(if, if)
(indentifier, j)
(<, <)
(>, >)
(,, ,)
(inter, 1)
(then, then)
(indentifier, j)
(:=, :=)
(inter, 20)
(;, ;)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(+1, +)
(inter, 10)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(inter, 80)
(:, :)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(-1, -)
(inter, 10)
(;, ;)
(indentifier, i)
(:=, :=)
(indentifier, i)
(+, +)
(inter, 1)
(;, ;)
(if, if)
(indentifier, i)
(>, >)
(,, ,)
(inter, 20)
(then, then)
(indentifier, i)
(:=, :=)
(inter, 1)
(;, ;)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(+1, +)
(inter, 10)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(inter, 77)
(:, :)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(-1, -)
(inter, 10)
(;, ;)
(indentifier, j)
(:=, :=)
(indentifier, j)
(+, +)
(inter, 1)
(;, ;)
(if, if)
(indentifier, j)
(>, >)
(,, ,)
(inter, 20)
(then, then)
(indentifier, j)
(:=, :=)
(inter, 1)
(;, ;)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(+1, +)
(inter, 10)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(inter, 101)
(:, :)
(case, case)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(of, of)
(inter, 10)
(:, :)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(inter, 14)
(;, ;)
(indentifier, fail)
(:=, :=)
(indentifier, true)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(inter, 11)
(:, :)
(indentifier, begin)
(indentifier, count)
((, ()
(indentifier, i)
(,, ,)
(indentifier, j)
(), ))
(;, ;)
(indentifier, dig)
((, ()
(indentifier, i)
(,, ,)
(indentifier, j)
(), ))
(;, ;)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(inter, 12)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(inter, 110)
(:, :)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(inter, 114)
(;, ;)
(indentifier, fail)
(:=, :=)
(indentifier, true)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(inter, 111)
(:, :)
(indentifier, begin)
(indentifier, count)
((, ()
(indentifier, i)
(,, ,)
(indentifier, j)
(), ))
(;, ;)
(indentifier, dig)
((, ()
(indentifier, i)
(,, ,)
(indentifier, j)
(), ))
(;, ;)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(inter, 112)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(inter, 114)
(:, :)
(case, case)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(of, of)
(inter, 10)
(:, :)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(inter, 13)
(;, ;)
(indentifier, next)
(:=, :=)
(indentifier, next)
(-, -)
(inter, 1)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(inter, 11)
(:, :)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(inter, 15)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(inter, 13)
(:, :)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(inter, 10)
(;, ;)
(indentifier, next)
(:=, :=)
(indentifier, next)
(+, +)
(inter, 1)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(inter, 15)
(:, :)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(inter, 11)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(inter, 110)
(:, :)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(inter, 113)
(;, ;)
(indentifier, next)
(:=, :=)
(indentifier, next)
(-, -)
(inter, 1)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(inter, 111)
(:, :)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(inter, 115)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(inter, 113)
(:, :)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(inter, 110)
(;, ;)
(indentifier, next)
(:=, :=)
(indentifier, next)
(+, +)
(inter, 1)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(inter, 115)
(:, :)
(indentifier, begin)
(indentifier, a)
([, [)
(indentifier, i)
(,, ,)
(indentifier, j)
(], ])
(:=, :=)
(inter, 111)
(;, ;)
(indentifier, exit)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(inter, 113)
(:, :)
(indentifier, fail)
(:=, :=)
(indentifier, true)
(;, ;)
(inter, 107)
(:, :)
(indentifier, code)
(;, ;)
(end, end)
(;, ;)
(end, end)
(;, ;)
(procedure, procedure)
(indentifier, youwin)
(;, ;)
(indentifier, begin)
(indentifier, writeln)
((, ()
(string, '     ****         ****         ****         ***        *****     *****')
(), ))
(;, ;)
(indentifier, writeln)
((, ()
(string, '      ****       ******       ****          ***         *****     ***')
(), ))
(;, ;)
(indentifier, writeln)
((, ()
(string, '       ****     ********     ****                       *** **    ***')
(), ))
(;, ;)
(indentifier, writeln)
((, ()
(string, '        ****   ****  ****   ****           *****        ***  **   ***')
(), ))
(;, ;)
(indentifier, writeln)
((, ()
(string, '         **** ****    **** ****             ***         ***   **  ***')
(), ))
(;, ;)
(indentifier, writeln)
((, ()
(string, '          *******      *******              ***         ***    ** ***')
(), ))
(;, ;)
(indentifier, writeln)
((, ()
(string, '           *****        *****               ***         ***     *****')
(), ))
(;, ;)
(indentifier, writeln)
((, ()
(string, '            ***          ***               *****       *****     *****')
(), ))
(;, ;)
(end, end)
(;, ;)
(procedure, procedure)
(indentifier, youfail)
(;, ;)
(indentifier, begin)
(indentifier, writeln)
((, ()
(string, '     *********         ***               *        *')
(), ))
(;, ;)
(indentifier, writeln)
((, ()
(string, '     *                *   *              *        *')
(), ))
(;, ;)
(indentifier, writeln)
((, ()
(string, '     *               *     *                      *')
(), ))
(;, ;)
(indentifier, writeln)
((, ()
(string, '     *********      *       *            *        *')
(), ))
(;, ;)
(indentifier, writeln)
((, ()
(string, '     *             ***********           *        *')
(), ))
(;, ;)
(indentifier, writeln)
((, ()
(string, '     *            *           *          *        *')
(), ))
(;, ;)
(indentifier, writeln)
((, ()
(string, '     *           *             *         *        *')
(), ))
(;, ;)
(indentifier, writeln)
((, ()
(string, '     *          *               *        *        ***********')
(), ))
(;, ;)
(end, end)
(;, ;)
(indentifier, begin)
(repeat, repeat)
(indentifier, randomize)
(;, ;)
(indentifier, fail)
(:=, :=)
(indentifier, false)
(;, ;)
(indentifier, next)
(:=, :=)
(inter, 0)
(;, ;)
(indentifier, writeln)
((, ()
(string, '---------------------D.A.SOFT--------------------')
(), ))
(;, ;)
(indentifier, writeln)
((, ()
(string, '----------------Sao Di Lei-----------------------')
(), ))
(;, ;)
(indentifier, writeln)
(;, ;)
(indentifier, choose)
(;, ;)
(indentifier, make)
(;, ;)
(indentifier, i)
(:=, :=)
(inter, 1)
(;, ;)
(indentifier, j)
(:=, :=)
(inter, 1)
(;, ;)
(indentifier, a)
([, [)
(inter, 1)
(,, ,)
(inter, 1)
(], ])
(:=, :=)
(inter, 11)
(;, ;)
(indentifier, print)
(;, ;)
(repeat, repeat)
(indentifier, key)
(:=, :=)
(indentifier, readkey)
(;, ;)
(indentifier, change)
((, ()
(indentifier, key)
(), ))
(;, ;)
(indentifier, print)
(;, ;)
(indentifier, writeln)
(;, ;)
(indentifier, writeln)
((, ()
(string, 'There is')
(,, ,)
(indentifier, next)
(,, ,)
(string, ' have not been found')
(), ))
(;, ;)
(indentifier, winner)
(;, ;)
(until, until)
((, ()
(indentifier, win)
(=, =)
(indentifier, true)
(), ))
(or, or)
((, ()
(indentifier, fail)
(=, =)
(indentifier, true)
(), ))
(;, ;)
(if, if)
(indentifier, win)
(=, =)
(indentifier, true)
(then, then)
(indentifier, youwin)
(else, else)
(indentifier, youfail)
(;, ;)
(indentifier, writeln)
((, ()
(string, 'DO YOU WANT TO PLAY AGAIN?[Y/N]')
(), ))
(;, ;)
(indentifier, re)
(:=, :=)
(indentifier, readkey)
(;, ;)
(until, UNTIL)
(indentifier, RE)
(=, =)
(string, 'n')
(;, ;)
(end, end)
(., .)
